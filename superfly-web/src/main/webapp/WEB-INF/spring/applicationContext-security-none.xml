<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:sec="http://www.springframework.org/schema/security"
    xmlns="http://www.springframework.org/schema/beans"
    xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <sec:http security="none" pattern="/favicon.ico"/>
    <sec:http security="none" pattern="/css/**"/>
    <sec:http security="none" pattern="/login*"/>
    <sec:http security="none" pattern="/sso/**"/>
    <sec:http security="none" pattern="/management/version.txt"/>

    <sec:http auto-config="false">

        <!--
            If you're not planning to use client SSL auth to protect your subsystem
            calls, change 'access' property to isAnonymous().
            You will also have to modify ssoService bean properties (see its
            comments in applicationContext-service.xml).
        -->
        <sec:intercept-url pattern="/remoting/sso.service" access="hasAuthority('ROLE_SUBSYSTEM')"/>
        <sec:intercept-url pattern="/remoting/sso.xremoting.service" access="hasAuthority('ROLE_SUBSYSTEM')"/>
        <sec:intercept-url pattern="/remoting/sso.hessian.service" access="hasAuthority('ROLE_SUBSYSTEM')"/>
        <sec:intercept-url pattern="/remoting/oauth2.hessian.service" access="isAnonymous()"/>
        <sec:intercept-url pattern="/remoting/basic.hessian.service" access="isAnonymous()"/>

        <sec:intercept-url pattern="/**" access="hasAnyAuthority('ROLE_ADMIN','ROLE_ACTION_TEMP_PASSWORD')"/>
        
        <sec:logout logout-url="/j_spring_security_logout" logout-success-url="/" />
        <sec:form-login login-page="/loginbase" login-processing-url="/j_spring_security_check"
                username-parameter="j_username" password-parameter="j_password"/>
        <sec:anonymous/>
        <sec:x509 user-service-ref="subsystemUserDetailsService"/>

        <!-- CSRF protection is disabled because for forms we use Wicket
             which has a protection of its own -->
        <sec:csrf disabled="true"/>

    </sec:http>

    <sec:authentication-manager alias="authenticationManager">
        <sec:authentication-provider ref="superflyLocalAuthenticationProvider"/>
    </sec:authentication-manager>
    
    <bean id="superflyLocalAuthenticationProvider" class="com.payneteasy.superfly.web.security.SuperflyLocalAuthenticationProvider">
        <property name="localSecurityService" ref="localSecurityService"/>
    </bean>

    <bean id="subsystemUserDetailsService" class="com.payneteasy.superfly.web.security.SubsystemUserDetailsService">
        <property name="subsystemService" ref="subsystemService"/>
    </bean>

    <bean id="customHttpFirewall" class="org.springframework.security.web.firewall.StrictHttpFirewall">
        <property name="allowSemicolon" value="true"/>
    </bean>
    <sec:http-firewall ref="customHttpFirewall"/>


    <!--
        <bean id="preauthUserDetailsService" class="org.springframework.security.userdetails.memory.InMemoryDaoImpl">
            <property name="userMap">
                <bean class="org.springframework.security.userdetails.memory.UserMap">
                    <property name="users">
                        <map>
                            <entry key="superfly-client">
                                <bean class="org.springframework.security.userdetails.User">
                                    <constructor-arg value="superfly-client"/>
                                    <constructor-arg value="not-used"/>
                                    <constructor-arg value="true"/>
                                    <constructor-arg>
                                        <list>
                                            <bean class="org.springframework.security.GrantedAuthorityImpl">
                                                <constructor-arg value="ROLE_SUBSYSTEM"/>
                                            </bean>
                                        </list>
                                    </constructor-arg>
                                </bean>
                            </entry>
                        </map>
                    </property>
                </bean>
            </property>
        </bean>
     -->

</beans>

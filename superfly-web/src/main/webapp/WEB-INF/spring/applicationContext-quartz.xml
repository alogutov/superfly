<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="expireSessionsJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="sessionService"/>
        <property name="targetMethod" value="deleteExpiredAndOldSessionsAndNotify"/>
        <property name="arguments">
            <list>
                <value type="int">86400</value>
            </list>
        </property>
    </bean>

    <bean id="expirePasswordJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="userService"/>
        <property name="targetMethod" value="expirePasswords"/>
        <property name="arguments">
            <list>
                <value type="int">90</value>
            </list>
        </property>
    </bean>
    
    <bean id="suspendUsersJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="userService"/>
        <property name="targetMethod" value="suspendUsers"/>
        <property name="arguments">
            <list>
                <value type="int">90</value>
            </list>
        </property>
    </bean>

    <bean id="expireSSOSessionsJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
           <property name="targetObject" ref="sessionService"/>
           <property name="targetMethod" value="deleteExpiredSSOSessions"/>
           <property name="arguments">
               <list>
                   <value type="int">#{contextParameters['superfly-max-sso-session-age-minutes']}</value>
               </list>
           </property>
       </bean>

    <bean id="expireTokensJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
           <property name="targetObject" ref="sessionService"/>
           <property name="targetMethod" value="deleteExpiredTokens"/>
           <property name="arguments">
               <list>
                   <value type="int">5</value>
               </list>
           </property>
       </bean>
    

    <bean id="expireSessionsTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
        <property name="jobDetail" ref="expireSessionsJobDetail"/>
        <property name="repeatInterval" value="60000"/> <!-- every minute -->
    </bean>

    <bean id="expirePasswordsTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
        <property name="jobDetail" ref="expirePasswordJobDetail"/>
        <property name="repeatInterval" value="86400000"/> <!-- daily -->
    </bean>
    
    <bean id="suspendUsersTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
        <property name="jobDetail" ref="suspendUsersJobDetail"/>
        <property name="repeatInterval" value="86400000"/> <!-- daily -->
    </bean>

    <bean id="expireSSOSessionsTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
        <property name="jobDetail" ref="expireSSOSessionsJobDetail"/>
        <property name="repeatInterval" value="60000"/> <!-- every minute -->
    </bean>

    <bean id="expireTokensTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
        <property name="jobDetail" ref="expireTokensJobDetail"/>
        <property name="repeatInterval" value="60000"/> <!-- every minute -->
    </bean>

    <bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="expireSessionsTrigger"/>
                <ref bean="expirePasswordsTrigger"/>
                <ref bean="suspendUsersTrigger"/>
                <ref bean="expireSSOSessionsTrigger"/>
                <ref bean="expireTokensTrigger"/>
            </list>
        </property>
    </bean>

    <!-- Disable persistent scheduler, to fix many (over 100 0000) events in database -->
    <bean id="persistentScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="applicationContextSchedulerContextKey" value="applicationContext"/>
    </bean>

<!--
    <bean id="persistentScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="transactionManager" ref="transactionManager"/>
        <property name="applicationContextSchedulerContextKey" value="applicationContext"/>
    </bean>
-->

</beans>
